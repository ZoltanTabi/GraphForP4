5. oldal - Gyorsulást kivettem, nem tudom honnan vettem
további jelzett elírások, pontosítások megtörténtek

6. oldal - felvéve todonak

Nem csak olyan adható be, de célszerű olyat beadni, ezt pontosítom - a kódban ezt le lehet kezelni, hogy actionben ne legyen if-es elágazás

tojás alakút azért használom, mert ez az alakzat elnevezése DOT-on belül, de átírom

19 - Gráfot kicseréltem - ez az a funkció, ahol a cfg-re kattintva megjelenítjük a dfg egy részgráfját.

Elemzések:
	1) - Írás, olvasás - összeszámolom, hogy egy változót hányszor használtak az összes lefutásban és ezt osztom el
		az összes lefutással
	2) - Ugyanaz, mint az előbb, de itt nem veszem külön az olvasást és írást
	3) - Itt nem számolok átlagot, itt összességében nézem, mivel sok olya helyzet van, hogy egy változót
		az egyik lefutásban módosítottak és felhasználtak, de a a másik lefutásban használva sem volt, így nem tudtam volna hatékonyan átlagot számolni
	4) - Fejléceket számolom hányszor használták és azt osztom a lefutások számával, a fejlécben lévő változók mérete mindig fix,
		a felhasznált változók mérete is átlagolva van
		
	Azért döntöttem az átlagolás mellett, mert szerintem így jobban mutatja, hogy egy változó, vagy bármi a beadott csomag mellett milyen hasznos,
	persze nem sokkal másabb, mintha nem átlagolnék, de én így szebbnek találtam
	
	
Továbbfejlesztések:
	Pontosítottam a P4c https://github.com/p4lang/p4c#dependencies linken látható, hogy ez az egyetlen hivatalosan támogatott.
	
	Átírtam számra, hogy olvasva is használható legyen
	

-- ÚJ --

2.3.3 - Else if felvéve mint nem használható kód részlet
2.3.1 - kibővítése
2.3.7 - Bekerült
2.2.2 - telepítést kivettem, nem akarok energiát beleölni abba, hogy hol lehet visual studio használata nélkül felépíteni
Fejlesztői dokumentáció elkezdése - Hivatkozásokat majd a végén megcsinálom.

1. - Bevezetés megírása


--05.30.--
--Javítás--

Visszaírva tojás alakúra
2.3.1 képek és szöveg elrendezésének javítása





